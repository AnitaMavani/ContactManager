{"ast":null,"code":"var _jsxFileName = \"/Users/anitamavani/workspace/React/my-ts-app/src/pages/ContactForm.tsx\";\nimport React from \"react\";\nimport { Box, TextField, Container, Button } from '@mui/material';\nimport FormManager from \"./FormManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  const initialState = {\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  };\n  const validateFields = fields => {\n    const errors = {\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    };\n    if (!fields.name.trim()) errors.name = \"Name is required.\";\n    if (!fields.email.trim()) errors.email = \"Email is required.\";\n    if (!fields.message.trim()) errors.message = \"Message is required.\";\n    return errors;\n  };\n  const {\n    inputs,\n    errors,\n    handleChange,\n    validate\n  } = FormManager(initialState);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Log inputs and errors to debug\n    console.log(\"Inputs:\", inputs);\n    console.log(\"Errors:\", errors);\n    if (validate(validateFields)) {\n      console.log(\"Contact form submitted:\", inputs);\n      resetForm(); // Optional: Uncomment to reset after submission\n    } else {\n      console.log(\"Validation failed:\", errors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      maxWidth: 600,\n      margin: \"auto\",\n      marginTop: 5,\n      padding: 3,\n      borderRadius: 5,\n      border: \"1px solid #eee\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          value: inputs.name,\n          onChange: handleChange,\n          label: \"Name\",\n          type: \"text\",\n          error: Boolean(errors.name),\n          helperText: errors.name,\n          margin: \"dense\",\n          placeholder: \"Name\",\n          variant: \"outlined\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          value: inputs.email,\n          onChange: handleChange,\n          label: \"Email\",\n          type: \"email\",\n          error: Boolean(errors.email),\n          helperText: errors.email,\n          margin: \"dense\",\n          placeholder: \"Email\",\n          variant: \"outlined\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          value: inputs.message,\n          onChange: handleChange,\n          label: \"Message\",\n          multiline: true,\n          error: Boolean(errors.message),\n          helperText: errors.message,\n          rows: 4,\n          margin: \"dense\",\n          placeholder: \"Message\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            type: \"submit\",\n            sx: {\n              margin: 3\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","Box","TextField","Container","Button","FormManager","jsxDEV","_jsxDEV","ContactForm","initialState","name","email","message","validateFields","fields","errors","trim","inputs","handleChange","validate","handleSubmit","e","preventDefault","console","log","resetForm","children","display","flexDirection","alignItems","justifyContent","maxWidth","margin","marginTop","padding","borderRadius","border","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","label","type","error","Boolean","helperText","placeholder","variant","fullWidth","multiline","rows","sx","_c","$RefreshReg$"],"sources":["/Users/anitamavani/workspace/React/my-ts-app/src/pages/ContactForm.tsx"],"sourcesContent":["import React from \"react\";\nimport { Box, TextField, Container, Button } from '@mui/material';\nimport FormManager from \"./FormManager\";\n\nconst ContactForm = () => {\n  const initialState = { name: \"\", email: \"\", message: \"\" };\n\n  const validateFields = (fields: any) => {\n    const errors = { name: \"\", email: \"\", message: \"\" };\n    if (!fields.name.trim()) errors.name = \"Name is required.\";\n    if (!fields.email.trim()) errors.email = \"Email is required.\";\n    if (!fields.message.trim()) errors.message = \"Message is required.\";\n    return errors;\n  };\n\n  const { inputs, errors, handleChange, validate } = FormManager(initialState);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    // Log inputs and errors to debug\n    console.log(\"Inputs:\", inputs);\n    console.log(\"Errors:\", errors);\n\n    if (validate(validateFields)) {\n      console.log(\"Contact form submitted:\", inputs);\n       resetForm(); // Optional: Uncomment to reset after submission\n    } else {\n      console.log(\"Validation failed:\", errors);\n    }\n  };\n\n  return (\n    <Container>\n      <Box\n        display=\"flex\"\n        flexDirection={\"column\"}\n        alignItems=\"center\"\n        justifyContent={\"center\"}\n        maxWidth={600}\n        margin=\"auto\"\n        marginTop={5}\n        padding={3}\n        borderRadius={5}\n        border={\"1px solid #eee\"}\n      >\n        <h2>Contact</h2>\n        <form onSubmit={handleSubmit}>\n          <TextField\n            name=\"name\"\n            value={inputs.name}\n            onChange={handleChange}\n            label=\"Name\"\n            type={\"text\"}\n            error={Boolean(errors.name)}\n            helperText={errors.name}\n            margin=\"dense\"\n            placeholder=\"Name\"\n            variant=\"outlined\"\n            fullWidth\n          />\n          <TextField\n            name=\"email\"\n            value={inputs.email}\n            onChange={handleChange}\n            label=\"Email\"\n            type=\"email\"\n            error={Boolean(errors.email)}\n            helperText={errors.email}\n            margin=\"dense\"\n            placeholder=\"Email\"\n            variant=\"outlined\"\n            fullWidth\n          />\n          <TextField\n            name=\"message\"\n            value={inputs.message}\n            onChange={handleChange}\n            label=\"Message\"\n            multiline\n            error={Boolean(errors.message)}\n            helperText={errors.message}\n            rows={4}\n            margin=\"dense\"\n            placeholder=\"Message\"\n            fullWidth\n          />\n          <div>\n            <Button variant=\"contained\" type=\"submit\" sx={{ margin: 3 }}>\n              Submit\n            </Button>\n          </div>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}