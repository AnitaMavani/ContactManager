{"ast":null,"code":"var _jsxFileName = \"/Users/anitamavani/workspace/React/my-ts-app/src/pages/Auth.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, TextField, Container, Button, Typography, Link } from \"@mui/material\";\nimport Validation from \"./Validation\";\nimport FormManager from \"./FormManager\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [isRegister, setIsRegister] = useState(false);\n  console.log(\"direct after assigned\", isRegister);\n  const initialState = isRegister ? {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  } : {\n    email: \"\",\n    password: \"\"\n  };\n  cons;\n  //const initialState = { name: \"\", email: \"\", password: \"\", confirmPassword: \"\" };\n\n  const {\n    inputs,\n    errors,\n    handleChange,\n    validate,\n    resetForm\n  } = FormManager(initialState);\n  console.log(inputs);\n  console.log(errors);\n\n  // useEffect(() => {\n  //   resetForm();\n  // }, [isRegister]);\n  // console.log(\"after useEffect\", isRegister);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Inputs:\", inputs);\n    console.log(\"Validation Errors:\", errors);\n    if (validate(Validation)) {\n      if (validate(Validation)) {\n        console.log(isRegister ? \"Register Success:\" : \"Login Success:\", inputs);\n        resetForm(); // Clear form on successful submission\n      }\n    } else {\n      console.log(\"Validation failed:\", errors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        maxWidth: 600,\n        margin: \"auto\",\n        marginTop: 5,\n        padding: 3,\n        borderRadius: 5,\n        border: \"1px solid #eee\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: isRegister ? \"Register\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [isRegister && /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"name\",\n            value: inputs.name || \"\",\n            onChange: handleChange,\n            label: \"Name\",\n            type: \"text\",\n            error: Boolean(errors.name),\n            helperText: errors.name,\n            margin: \"dense\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"email\",\n            label: \"Email\",\n            value: inputs.email || \"\",\n            onChange: handleChange,\n            type: \"email\",\n            error: Boolean(errors.email),\n            helperText: errors.email,\n            margin: \"dense\",\n            placeholder: \"Email\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"password\",\n            label: \"Password\",\n            value: inputs.password || \"\",\n            onChange: handleChange,\n            type: \"password\",\n            error: Boolean(errors.password),\n            helperText: errors.password,\n            margin: \"dense\",\n            placeholder: \"Password\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), isRegister && /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            value: inputs.confirmPassword || \"\",\n            onChange: handleChange,\n            type: \"password\",\n            error: Boolean(errors.confirmPassword),\n            helperText: errors.confirmPassword,\n            margin: \"dense\",\n            placeholder: \"Confirm Password\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            type: \"submit\",\n            sx: {\n              margin: 3\n            },\n            fullWidth: true,\n            children: isRegister ? \"Register\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [isRegister ? \"Already have an account? \" : \"New here? \", /*#__PURE__*/_jsxDEV(Link, {\n            component: \"button\",\n            variant: \"body2\",\n            onClick: () => {\n              setIsRegister(prev => !prev);\n              //resetForm(); // Reset form when switching modes\n            },\n            children: isRegister ? \"Login\" : \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Auth, \"23rMvWE3z/htVkZKoPfASxlJpf4=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","Box","TextField","Container","Button","Typography","Link","Validation","FormManager","jsxDEV","_jsxDEV","Fragment","_Fragment","Auth","_s","isRegister","setIsRegister","console","log","initialState","name","email","password","confirmPassword","cons","inputs","errors","handleChange","validate","resetForm","handleSubmit","e","preventDefault","children","display","flexDirection","alignItems","justifyContent","maxWidth","margin","marginTop","padding","borderRadius","border","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","label","type","error","Boolean","helperText","placeholder","fullWidth","sx","component","onClick","prev","_c","$RefreshReg$"],"sources":["/Users/anitamavani/workspace/React/my-ts-app/src/pages/Auth.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, TextField, Container, Button, Typography, Link } from \"@mui/material\";\nimport Validation from \"./Validation\";\nimport FormManager from \"./FormManager\";\n\ntype LoginForm = {\n  email: string;\n  password: string;\n};\n\ntype RegisterForm = LoginForm & {\n  name: string;\n  confirmPassword: string;\n};\n\ntype FormState = RegisterForm | LoginForm;\n\nconst Auth = () => {\n  const [isRegister, setIsRegister] = useState(false);\n  console.log(\"direct after assigned\", isRegister);\n\n  const initialState:FormState = isRegister\n    ? { name: \"\", email: \"\", password: \"\", confirmPassword: \"\" }\n    : { email: \"\", password: \"\" };\n    cons\n  //const initialState = { name: \"\", email: \"\", password: \"\", confirmPassword: \"\" };\n\n  const { inputs, errors, handleChange, validate, resetForm } = FormManager(initialState);\n  console.log(inputs);\n  console.log(errors);\n\n  // useEffect(() => {\n  //   resetForm();\n  // }, [isRegister]);\n  // console.log(\"after useEffect\", isRegister);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    console.log(\"Inputs:\", inputs);\n    console.log(\"Validation Errors:\", errors);\n\n    if (validate(Validation)) {\n      if (validate(Validation)) {\n      console.log(isRegister ? \"Register Success:\" : \"Login Success:\", inputs);\n      resetForm(); // Clear form on successful submission\n    }\n      \n    } else {\n      console.log(\"Validation failed:\", errors);\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        <Box\n          display=\"flex\"\n          flexDirection={\"column\"}\n          alignItems=\"center\"\n          justifyContent={\"center\"}\n          maxWidth={600}\n          margin=\"auto\"\n          marginTop={5}\n          padding={3}\n          borderRadius={5}\n          border={\"1px solid #eee\"}\n        >\n          <Typography variant=\"h4\" gutterBottom>\n            {isRegister ? \"Register\" : \"Login\"}\n          </Typography>\n          <form onSubmit={handleSubmit}>\n            {isRegister && (\n              <TextField\n                name=\"name\"\n                value={((inputs as RegisterForm).name) || \"\"}\n                onChange={handleChange}\n                label=\"Name\"\n                type=\"text\"\n                error={Boolean((errors as RegisterForm).name)}\n                helperText={(errors as RegisterForm).name}\n                margin=\"dense\"\n                placeholder=\"Name\"\n                variant=\"outlined\"\n                fullWidth\n              />\n            )}\n            <TextField\n              name=\"email\"\n              label=\"Email\"\n              value={inputs.email || \"\"}\n              onChange={handleChange}\n              type=\"email\"\n              error={Boolean(errors.email)}\n              helperText={errors.email}\n              margin=\"dense\"\n              placeholder=\"Email\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            <TextField\n              name=\"password\"\n              label=\"Password\"\n              value={inputs.password || \"\"}\n              onChange={handleChange}\n              type=\"password\"\n              error={Boolean(errors.password)}\n              helperText={errors.password}\n              margin=\"dense\"\n              placeholder=\"Password\"\n              variant=\"outlined\"\n              fullWidth\n            />\n            {isRegister && (\n              <TextField\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                value={(inputs as RegisterForm).confirmPassword || \"\"}\n                onChange={handleChange}\n                type=\"password\"\n                error={Boolean((errors as RegisterForm).confirmPassword)}\n                helperText={(errors as RegisterForm).confirmPassword}\n                margin=\"dense\"\n                placeholder=\"Confirm Password\"\n                variant=\"outlined\"\n                fullWidth\n              />\n            )}\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ margin: 3 }}\n              fullWidth\n            >\n              {isRegister ? \"Register\" : \"Login\"}\n            </Button>\n          </form>\n          <Typography variant=\"body2\">\n            {isRegister ? \"Already have an account? \" : \"New here? \"}\n            <Link\n              component=\"button\"\n              variant=\"body2\"\n              onClick={() => {\n                setIsRegister((prev) => !prev);\n                //resetForm(); // Reset form when switching modes\n              }}\n            >\n              {isRegister ? \"Login\" : \"Register\"}\n            </Link>\n          </Typography>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default Auth;\nexport type { FormState };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}