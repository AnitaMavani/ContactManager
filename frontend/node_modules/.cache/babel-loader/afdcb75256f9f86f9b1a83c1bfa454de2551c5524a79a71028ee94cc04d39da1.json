{"ast":null,"code":"var _jsxFileName = \"/Users/anitamavani/workspace/React/my-ts-app/src/pages/Auth.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Container, Button, Typography, Link } from \"@mui/material\";\nimport Validation from './Validation';\nimport FormManager from './FormManager';\nimport { fieldValidationRules } from './ValidationRules';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [isRegister, setIsRegister] = useState(false);\n  const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const {\n    inputs,\n    errors,\n    handleChange,\n    validate,\n    resetForm\n  } = FormManager(initialState);\n  const currentRules = {\n    ...fieldValidationRules,\n    ...(isRegister && {\n      confirmPassword: value => value !== inputs.password ? \"Passwords do not match.\" : \"\"\n    })\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate(Validation)) {\n      if (isRegister) {\n        console.log(\"Register form submitted:\", inputs);\n      } else {\n        console.log(\"Login form submitted:\", inputs);\n      }\n      resetForm();\n    } else {\n      console.log(\"Validation failed:\", errors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        maxWidth: 600,\n        margin: \"auto\",\n        marginTop: 5,\n        padding: 3,\n        borderRadius: 5,\n        border: \"1px solid #eee\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isRegister ? \"Register\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [isRegister && /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"name\",\n            value: inputs.name,\n            onChange: handleChange,\n            label: \"Name\",\n            type: \"text\",\n            error: Boolean(errors.name),\n            helperText: errors.name,\n            margin: \"dense\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"email\",\n            label: \"Email\",\n            value: inputs.email,\n            onChange: handleChange,\n            type: \"email\",\n            error: Boolean(errors.email),\n            helperText: errors.email,\n            margin: \"dense\",\n            placeholder: \"Email\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"password\",\n            label: \"Password\",\n            value: inputs.password,\n            onChange: handleChange,\n            type: \"password\",\n            error: Boolean(errors.password),\n            helperText: errors.password,\n            margin: \"dense\",\n            placeholder: \"Password\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), isRegister && /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            value: inputs.confirmPassword,\n            onChange: handleChange,\n            type: \"password\",\n            error: Boolean(errors.confirmPassword),\n            helperText: errors.confirmPassword,\n            margin: \"dense\",\n            placeholder: \"Confirm Password\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              type: \"submit\",\n              sx: {\n                margin: 3\n              },\n              children: isRegister ? \"Register\" : \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: isRegister,\n            onChange: () => setIsRegister(prev => !prev),\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [isRegister ? \"Already have an account? \" : \"New here? \", /*#__PURE__*/_jsxDEV(Link, {\n              component: \"button\",\n              variant: \"body2\",\n              onClick: e => {\n                e.preventDefault();\n                setIsRegister(prev => !prev);\n              },\n              children: isRegister ? \"Login\" : \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Auth, \"23rMvWE3z/htVkZKoPfASxlJpf4=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","Box","TextField","Container","Button","Typography","Link","Validation","FormManager","fieldValidationRules","jsxDEV","_jsxDEV","Fragment","_Fragment","Auth","_s","isRegister","setIsRegister","initialState","name","email","password","confirmPassword","inputs","errors","handleChange","validate","resetForm","currentRules","value","handleSubmit","e","preventDefault","console","log","children","display","flexDirection","alignItems","justifyContent","maxWidth","margin","marginTop","padding","borderRadius","border","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","label","type","error","Boolean","helperText","placeholder","variant","fullWidth","sx","Switch","checked","prev","color","component","onClick","_c","$RefreshReg$"],"sources":["/Users/anitamavani/workspace/React/my-ts-app/src/pages/Auth.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, TextField, Container, Button, Typography, Link} from \"@mui/material\";\nimport Validation from './Validation';\nimport FormManager from './FormManager';\nimport { fieldValidationRules } from './ValidationRules';\n\ntype ValidationRules = {\n  [key: string]: (value: string) => string;\n};\n\nconst Auth = () => {\n  const [isRegister, setIsRegister] = useState(false);\n  const initialState = { name: \"\", email: \"\", password: \"\", confirmPassword:\"\" };\n\n  const { inputs, errors, handleChange, validate, resetForm } = FormManager(initialState);\n\n  const currentRules: ValidationRules = {\n    ...fieldValidationRules,\n    ...(isRegister && {\n      confirmPassword: (value: string) =>\n        value !== inputs.password ? \"Passwords do not match.\" : \"\",\n    }),\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (validate(Validation)) {\n      if (isRegister) {\n        console.log(\"Register form submitted:\", inputs);\n      } else {\n        console.log(\"Login form submitted:\", inputs);\n      }\n      resetForm();\n    } else {\n      console.log(\"Validation failed:\", errors);\n    }\n  };\n    \n    return(\n        <>\n        <Container>\n        <Box\n         display=\"flex\"\n         flexDirection={\"column\"}\n         alignItems=\"center\"\n         justifyContent={\"center\"}\n         maxWidth={600}\n         margin=\"auto\"\n         marginTop={5}\n         padding={3}\n        borderRadius={5}\n        border={\"1px solid #eee\"}\n        >\n        <h2>{isRegister ? \"Register\" : \"Login\" }</h2>\n        <form onSubmit={handleSubmit}>\n          {isRegister && \n        <TextField\n                name=\"name\"\n                value={inputs.name}\n                onChange={handleChange}\n                label=\"Name\"\n                type={\"text\"}\n                error={Boolean(errors.name)}\n                helperText={errors.name}\n                margin=\"dense\"\n                placeholder=\"Name\"\n                variant=\"outlined\"\n                fullWidth\n            /> \n          }\n            <TextField\n                name=\"email\"\n                label=\"Email\"\n                value={inputs.email}\n                onChange={handleChange}\n                type=\"email\"\n                error={Boolean(errors.email)}\n                helperText={errors.email}\n                margin=\"dense\"\n                placeholder=\"Email\"\n                variant=\"outlined\"\n                fullWidth\n            />  \n            <TextField\n                name=\"password\"\n                label=\"Password\"\n                value={inputs.password}\n                onChange={handleChange}\n                type=\"password\"\n                error={Boolean(errors.password)}\n                helperText={errors.password}\n                margin=\"dense\"\n                placeholder=\"Password\"\n                variant=\"outlined\"\n                fullWidth\n            /> \n            {isRegister && \n            <TextField\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                value={inputs.confirmPassword}\n                onChange={handleChange}\n                type=\"password\"\n                error={Boolean(errors.confirmPassword)}\n                helperText={errors.confirmPassword}\n                margin=\"dense\"\n                placeholder=\"Confirm Password\"\n                variant=\"outlined\"\n                fullWidth\n            /> \n            }\n            <div>\n                <Button variant=\"contained\" type=\"submit\" sx={{margin:3}}>{isRegister ? \"Register\" : \"Login\"}</Button>\n            </div>\n            <Switch\n          checked={isRegister}\n          onChange={() => setIsRegister((prev) => !prev)}\n          color=\"primary\"\n        />\n        <Typography variant=\"body2\">\n          {isRegister ? \"Already have an account? \" : \"New here? \"}\n          <Link\n            component=\"button\"\n            variant=\"body2\"\n            onClick={(e) => {\n              e.preventDefault();\n              setIsRegister((prev) => !prev);\n            }}\n          >\n            {isRegister ? \"Login\" : \"Register\"}\n          </Link>\n        </Typography>\n        </form>     \n        </Box>\n        </Container>\n        </>\n    );\n}\nexport default Auth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}