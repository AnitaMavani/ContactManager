{"ast":null,"code":"const Validation = inputs => {\n  const fieldValidationRules = {\n    name: {\n      required: true\n    },\n    email: {\n      required: true,\n      regex: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    },\n    password: {\n      required: true,\n      minLength: 6\n    },\n    message: {\n      required: true,\n      minLength: 10\n    }\n  };\n  const errors = {};\n  if (!inputs.name) {\n    errors.name = \"Name is required.\";\n  }\n  if (!inputs.email) {\n    errors.email = \"Email is required.\";\n  } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(inputs.email)) {\n    errors.email = \"Invalid email address.\";\n  }\n  if (!inputs.password) {\n    errors.name = \"Password is required.\";\n  }\n  if (!inputs.message) {\n    errors.message = \"Message is required.\";\n  } else if (inputs.message.length < 10) {\n    errors.message = \"Message must be at least 10 characters long.\";\n  }\n  return errors;\n};\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","inputs","fieldValidationRules","name","required","email","regex","password","minLength","message","errors","test","length","_c","$RefreshReg$"],"sources":["/Users/anitamavani/workspace/React/my-ts-app/src/pages/Validation.tsx"],"sourcesContent":["type ValidationFunction<T> = (inputs: T) => Record<keyof T, string>;\nconst Validation: ValidationFunction<{ [key: string]: string }> = (inputs) => {\n  const fieldValidationRules: Record<string, ValidationRule> = {\n    name: { required: true },\n    email: { required: true, regex: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/ },\n    password: { required: true, minLength: 6 },\n    message: { required: true, minLength: 10 },\n  };\n\n  const errors: { [key: string]: string } = {};\n\n\n  if (!inputs.name) {\n    errors.name = \"Name is required.\";\n  }\n\n  if (!inputs.email) {\n    errors.email = \"Email is required.\";\n  } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(inputs.email)) {\n    errors.email = \"Invalid email address.\";\n  }\n\n  if (!inputs.password) {\n    errors.name = \"Password is required.\";\n  }\n\n  if (!inputs.message) {\n    errors.message = \"Message is required.\";\n  } else if (inputs.message.length < 10) {\n    errors.message = \"Message must be at least 10 characters long.\";\n  }\n\n  return errors;\n};\n\nexport default Validation;\n"],"mappings":"AACA,MAAMA,UAAyD,GAAIC,MAAM,IAAK;EAC5E,MAAMC,oBAAoD,GAAG;IAC3DC,IAAI,EAAE;MAAEC,QAAQ,EAAE;IAAK,CAAC;IACxBC,KAAK,EAAE;MAAED,QAAQ,EAAE,IAAI;MAAEE,KAAK,EAAE;IAA6B,CAAC;IAC9DC,QAAQ,EAAE;MAAEH,QAAQ,EAAE,IAAI;MAAEI,SAAS,EAAE;IAAE,CAAC;IAC1CC,OAAO,EAAE;MAAEL,QAAQ,EAAE,IAAI;MAAEI,SAAS,EAAE;IAAG;EAC3C,CAAC;EAED,MAAME,MAAiC,GAAG,CAAC,CAAC;EAG5C,IAAI,CAACT,MAAM,CAACE,IAAI,EAAE;IAChBO,MAAM,CAACP,IAAI,GAAG,mBAAmB;EACnC;EAEA,IAAI,CAACF,MAAM,CAACI,KAAK,EAAE;IACjBK,MAAM,CAACL,KAAK,GAAG,oBAAoB;EACrC,CAAC,MAAM,IAAI,CAAC,4BAA4B,CAACM,IAAI,CAACV,MAAM,CAACI,KAAK,CAAC,EAAE;IAC3DK,MAAM,CAACL,KAAK,GAAG,wBAAwB;EACzC;EAEA,IAAI,CAACJ,MAAM,CAACM,QAAQ,EAAE;IACpBG,MAAM,CAACP,IAAI,GAAG,uBAAuB;EACvC;EAEA,IAAI,CAACF,MAAM,CAACQ,OAAO,EAAE;IACnBC,MAAM,CAACD,OAAO,GAAG,sBAAsB;EACzC,CAAC,MAAM,IAAIR,MAAM,CAACQ,OAAO,CAACG,MAAM,GAAG,EAAE,EAAE;IACrCF,MAAM,CAACD,OAAO,GAAG,8CAA8C;EACjE;EAEA,OAAOC,MAAM;AACf,CAAC;AAACG,EAAA,GAhCIb,UAAyD;AAkC/D,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}