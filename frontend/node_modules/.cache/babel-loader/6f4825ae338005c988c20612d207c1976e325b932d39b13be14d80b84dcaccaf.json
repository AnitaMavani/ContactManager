{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst FormManager = initialValues => {\n  _s();\n  const [inputs, setInputs] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputs(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const validate = validationRules => {\n    const validationErrors = validationRules(inputs);\n    console.log(Object.keys(validationErrors).length);\n    const isValid = Object.keys(validationErrors).length === 0;\n    setErrors(validationErrors);\n    return isValid;\n  };\n  return {\n    inputs,\n    errors,\n    handleChange,\n    validate\n  };\n};\n_s(FormManager, \"PmaWV1MGj4+9wZSRUC2L/QlP8nA=\");\n_c = FormManager;\nexport default FormManager;\nvar _c;\n$RefreshReg$(_c, \"FormManager\");","map":{"version":3,"names":["useState","FormManager","initialValues","_s","inputs","setInputs","errors","setErrors","handleChange","event","name","value","target","prev","validate","validationRules","validationErrors","console","log","Object","keys","length","isValid","_c","$RefreshReg$"],"sources":["/Users/anitamavani/workspace/React/my-ts-app/src/pages/FormManager.tsx"],"sourcesContent":["import { useState } from 'react';\n\ntype ValidationFunction<T> = (values: T) => Record<keyof T, string>;\n\nconst FormManager = <T extends Record<string, any>>(initialValues: T) => {\n  const [inputs, setInputs] = useState<T>(initialValues);\n  const [errors, setErrors] = useState<Partial<Record<keyof T, string>>>({});\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const { name, value } = event.target;\n    setInputs((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const validate = (validationRules: ValidationFunction<T>): boolean => {\n    const validationErrors = validationRules(inputs);\n    console.log(Object.keys(validationErrors).length);\n    const isValid = Object.keys(validationErrors).length === 0;\n    \n    setErrors(validationErrors);\n    return isValid;\n  };\n\n  return { inputs, errors, handleChange, validate };\n};\n\nexport default FormManager;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAIhC,MAAMC,WAAW,GAAmCC,aAAgB,IAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAIE,aAAa,CAAC;EACtD,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAmC,CAAC,CAAC,CAAC;EAE1E,MAAMQ,YAAY,GAChBC,KAAgE,IAC7D;IACH,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCP,SAAS,CAAEQ,IAAI,KAAM;MACnB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,QAAQ,GAAIC,eAAsC,IAAc;IACpE,MAAMC,gBAAgB,GAAGD,eAAe,CAACX,MAAM,CAAC;IAChDa,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,IAAI,CAACJ,gBAAgB,CAAC,CAACK,MAAM,CAAC;IACjD,MAAMC,OAAO,GAAGH,MAAM,CAACC,IAAI,CAACJ,gBAAgB,CAAC,CAACK,MAAM,KAAK,CAAC;IAE1Dd,SAAS,CAACS,gBAAgB,CAAC;IAC3B,OAAOM,OAAO;EAChB,CAAC;EAED,OAAO;IAAElB,MAAM;IAAEE,MAAM;IAAEE,YAAY;IAAEM;EAAS,CAAC;AACnD,CAAC;AAACX,EAAA,CAxBIF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}