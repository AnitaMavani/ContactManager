{"ast":null,"code":"const Validation = inputs => {\n  const errors = Object.keys(inputs).reduce((acc, key) => {\n    const value = inputs[key];\n    console.log(\"print\");\n    if (!value.trim()) {\n      acc[key] = ` ${key} is required`;\n    }\n    return acc;\n  }, {});\n  return errors;\n};\n//   const errors = Object.keys(inputs).reduce((acc, key) => {\n//     const value = inputs[key];\n//     const rules = fieldValidationRules[key];\n//     if (rules.required && !value.trim()) {\n//       acc[key] = \"This field is required\";\n//     } else if (rules.minLength && value.length < rules.minLength) {\n//       acc[key] = `This field must be at least ${rules.minLength} characters long`;\n//     } else if (rules.regex && !rules.regex.test(value)) {\n//       acc[key] = \"Invalid format\";\n//     } else if (rules.customValidation) {\n//       const customError = rules.customValidation(value);\n//       if (customError) {\n//         acc[key] = customError;\n//       }\n//     }\n//     return acc;\n//   }, {} as Record<string, string>);\n//   return errors;\n// };\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","inputs","errors","Object","keys","reduce","acc","key","value","console","log","trim","_c","$RefreshReg$"],"sources":["/Users/anitamavani/workspace/React/my-ts-app/src/pages/Validation.tsx"],"sourcesContent":["import fieldValidationRules from 'Validationrules';\ntype ValidationFunction<T> = (inputs: T) => Record<keyof T, string>;\n\nconst Validation: ValidationFunction<{ [key: string]: string }> = (inputs) => {\n  const errors = Object.keys(inputs).reduce((acc, key) => {\n    const value = inputs[key];\n    console.log(\"print\");\n    if (!value.trim()) {\n      acc[key] = ` ${key} is required`;\n    }\n    return acc;\n  }, {} as Record<string, string>);\n  return errors;\n}\n//   const errors = Object.keys(inputs).reduce((acc, key) => {\n//     const value = inputs[key];\n//     const rules = fieldValidationRules[key];\n//     if (rules.required && !value.trim()) {\n//       acc[key] = \"This field is required\";\n//     } else if (rules.minLength && value.length < rules.minLength) {\n//       acc[key] = `This field must be at least ${rules.minLength} characters long`;\n//     } else if (rules.regex && !rules.regex.test(value)) {\n//       acc[key] = \"Invalid format\";\n//     } else if (rules.customValidation) {\n//       const customError = rules.customValidation(value);\n//       if (customError) {\n//         acc[key] = customError;\n//       }\n//     }\n//     return acc;\n//   }, {} as Record<string, string>);\n//   return errors;\n// };\n\nexport default Validation;\n"],"mappings":"AAGA,MAAMA,UAAyD,GAAIC,MAAM,IAAK;EAC5E,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IACtD,MAAMC,KAAK,GAAGP,MAAM,CAACM,GAAG,CAAC;IACzBE,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;MACjBL,GAAG,CAACC,GAAG,CAAC,GAAG,IAAIA,GAAG,cAAc;IAClC;IACA,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAA2B,CAAC;EAChC,OAAOJ,MAAM;AACf,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAU,EAAA,GA7BMZ,UAAyD;AA+B/D,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}