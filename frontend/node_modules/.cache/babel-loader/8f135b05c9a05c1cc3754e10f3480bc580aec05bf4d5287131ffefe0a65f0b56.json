{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\n// interface FormState {\n//     name: string;\n//     email: string;\n//     message:string;\n//   }\n\nconst FormManager = (initialState, validateFields) => {\n  _s();\n  const [inputs, setInputs] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputs(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const validate = () => {\n    const validationErrors = validateFields(inputs);\n    setErrors(validationErrors);\n    return Object.keys(validationErrors).length === 0;\n  };\n  const resetForm = () => setInputs(initialState);\n  return {\n    inputs,\n    errors,\n    handleChange,\n    validate,\n    resetForm\n  };\n};\n_s(FormManager, \"Kl2lBDcFRpco48RaV3EfsoeCqdQ=\");\n_c = FormManager;\nexport default FormManager;\nvar _c;\n$RefreshReg$(_c, \"FormManager\");","map":{"version":3,"names":["useState","FormManager","initialState","validateFields","_s","inputs","setInputs","errors","setErrors","handleChange","event","name","value","target","prev","validate","validationErrors","Object","keys","length","resetForm","_c","$RefreshReg$"],"sources":["/Users/anitamavani/workspace/React/my-ts-app/src/pages/FormManager.tsx"],"sourcesContent":["import {useState} from 'react';\n// interface FormState {\n//     name: string;\n//     email: string;\n//     message:string;\n//   }\ntype ValidateFunction = (fields: FormState) => Record<string, string>;\n\nconst FormManager = (\n    initialState: FormState,\n    validateFields: ValidateFunction\n    ) => {\n        const [inputs, setInputs] = useState<FormState>(initialState);\n        const [errors, setErrors] = useState<Record<string, string>>({});\n\n        const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            const { name, value } = event.target;\n            setInputs((prev) => ({ ...prev, [name]: value }));\n          };\n    const validate = () => {\n        const validationErrors = validateFields(inputs);\n        setErrors(validationErrors);\n        return Object.keys(validationErrors).length === 0;\n      };\n    const resetForm = () => setInputs(initialState);\n    return { inputs, errors, handleChange, validate, resetForm };\n}\nexport default FormManager;"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAGA,MAAMC,WAAW,GAAGA,CAChBC,YAAuB,EACvBC,cAAgC,KAC3B;EAAAC,EAAA;EACD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAYE,YAAY,CAAC;EAC7D,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAyB,CAAC,CAAC,CAAC;EAEhE,MAAMS,YAAY,GAAIC,KAA0C,IAAK;IACjE,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCP,SAAS,CAAEQ,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACnD,CAAC;EACP,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMC,gBAAgB,GAAGb,cAAc,CAACE,MAAM,CAAC;IAC/CG,SAAS,CAACQ,gBAAgB,CAAC;IAC3B,OAAOC,MAAM,CAACC,IAAI,CAACF,gBAAgB,CAAC,CAACG,MAAM,KAAK,CAAC;EACnD,CAAC;EACH,MAAMC,SAAS,GAAGA,CAAA,KAAMd,SAAS,CAACJ,YAAY,CAAC;EAC/C,OAAO;IAAEG,MAAM;IAAEE,MAAM;IAAEE,YAAY;IAAEM,QAAQ;IAAEK;EAAU,CAAC;AAChE,CAAC;AAAAhB,EAAA,CAlBKH,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAmBjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}