{"ast":null,"code":"export const fieldValidationRules = {\n  name: {\n    required: true\n  },\n  email: {\n    required: true,\n    regex: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  },\n  password: {\n    required: true,\n    minLength: 6\n  },\n  confirmPassword: {\n    required: true,\n    minLength: 6,\n    customValidation: value !== password ? \"Passwords do not match.\" : \"\"\n  },\n  message: {\n    required: true,\n    minLength: 10\n  }\n};","map":{"version":3,"names":["fieldValidationRules","name","required","email","regex","password","minLength","confirmPassword","customValidation","value","message"],"sources":["/Users/anitamavani/workspace/React/my-ts-app/src/pages/ValidationRules.tsx"],"sourcesContent":["interface ValidationRule {\n  required?: boolean;\n  minLength?: number;\n  regex?: RegExp;\n  customValidation?: (value: string) => string | undefined;\n}\n\nexport const fieldValidationRules: Record<string, ValidationRule> = {\n  name: { required: true },\n  email: { required: true, regex: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/ },\n  password: { required: true, minLength: 6 },\n  confirmPassword: { required: true, minLength: 6, customValidation: value !== password ? \"Passwords do not match.\" : \"\" },\n  message: { required: true, minLength: 10 },\n};"],"mappings":"AAOA,OAAO,MAAMA,oBAAoD,GAAG;EAClEC,IAAI,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC;EACxBC,KAAK,EAAE;IAAED,QAAQ,EAAE,IAAI;IAAEE,KAAK,EAAE;EAA6B,CAAC;EAC9DC,QAAQ,EAAE;IAAEH,QAAQ,EAAE,IAAI;IAAEI,SAAS,EAAE;EAAE,CAAC;EAC1CC,eAAe,EAAE;IAAEL,QAAQ,EAAE,IAAI;IAAEI,SAAS,EAAE,CAAC;IAAEE,gBAAgB,EAAEC,KAAK,KAAKJ,QAAQ,GAAG,yBAAyB,GAAG;EAAG,CAAC;EACxHK,OAAO,EAAE;IAAER,QAAQ,EAAE,IAAI;IAAEI,SAAS,EAAE;EAAG;AAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}