{"ast":null,"code":"var _jsxFileName = \"/Users/anitamavani/workspace/React/my-ts-app/src/pages/ContactForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, TextField, Container, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const initialState = {\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  };\n  const [errors, setErrors] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    message: \"\"\n  });\n  const handleChange = e => {\n    setInputs(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [e.target.name]: \"\"\n    }));\n  };\n  const validate = () => {\n    let isValid = true;\n    const newErrors = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      message: \"\"\n    };\n    if (!inputs.name.trim()) {\n      newErrors.name = \"Name is required.\";\n      isValid = false;\n    }\n    if (!inputs.email.trim()) {\n      newErrors.email = \"Email is required.\";\n      isValid = false;\n    } else if (!/^[\\w.%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$/.test(inputs.email)) {\n      newErrors.email = \"Enter a valid email address.\";\n      isValid = false;\n    }\n    if (!inputs.password.trim()) {\n      newErrors.password = \"Password is required.\";\n      isValid = false;\n    } else if (inputs.password.length < 6) {\n      newErrors.password = \"Password must be at least 6 characters.\";\n      isValid = false;\n    }\n    if (!inputs.message.trim()) {\n      newErrors.message = \"Message is required.\";\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate()) {\n      console.log(\"Form submitted:\", inputs);\n      // Reset form fields\n      setInputs({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        message: \"\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        maxWidth: 600,\n        margin: \"auto\",\n        marginTop: 5,\n        padding: 3,\n        borderRadius: 5,\n        border: \"1px solid #eee\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"name\",\n            value: inputs.name,\n            onChange: handleChange,\n            label: \"Name\",\n            type: \"text\",\n            error: Boolean(errors.name),\n            helperText: errors.name,\n            margin: \"dense\",\n            placeholder: \"Name\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"email\",\n            value: inputs.email,\n            onChange: handleChange,\n            label: \"Email\",\n            type: \"email\",\n            error: Boolean(errors.email),\n            helperText: errors.email,\n            margin: \"dense\",\n            placeholder: \"Email\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"password\",\n            value: inputs.password,\n            onChange: handleChange,\n            label: \"Password\",\n            type: \"password\",\n            error: Boolean(errors.password),\n            helperText: errors.password,\n            margin: \"dense\",\n            placeholder: \"Password\",\n            variant: \"outlined\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"message\",\n            value: inputs.message,\n            onChange: handleChange,\n            label: \"Multiline\",\n            multiline: true,\n            error: Boolean(errors.message),\n            helperText: errors.message,\n            rows: 4,\n            margin: \"dense\",\n            placeholder: \"Message\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              type: \"submit\",\n              sx: {\n                margin: 3\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ContactForm, \"J+RnkhBOfb4Abq7oiNB0XG3nN+c=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","Box","TextField","Container","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactForm","_s","initialState","name","email","message","errors","setErrors","password","handleChange","e","setInputs","prevState","target","value","prevErrors","validate","isValid","newErrors","inputs","trim","test","length","handleSubmit","preventDefault","console","log","children","display","flexDirection","alignItems","justifyContent","maxWidth","margin","marginTop","padding","borderRadius","border","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","label","type","error","Boolean","helperText","placeholder","variant","fullWidth","multiline","rows","sx","_c","$RefreshReg$"],"sources":["/Users/anitamavani/workspace/React/my-ts-app/src/pages/ContactForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, TextField, Container, Button } from '@mui/material';\nimport FormManager from \"./FormManager\";\n\nconst ContactForm = () => {\n  const initialState = { name: \"\", email: \"\", message: \"\" };\n    const [errors, setErrors] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        message: \"\"\n      });\n\n    const handleChange = (e:any) => {\n        setInputs((prevState) => ({ \n            ...prevState, \n            [e.target.name]: e.target.value \n        }));\n        setErrors((prevErrors) => ({\n            ...prevErrors,\n            [e.target.name]: \"\"\n          }));\n    };\n    const validate = () => {\n        let isValid = true;\n        const newErrors: { name: string; email: string; password: string; message: string } = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            message: \"\"\n          };\n    \n        if (!inputs.name.trim()) {\n            newErrors.name = \"Name is required.\";\n            isValid = false;\n          }\n          if (!inputs.email.trim()) {\n            newErrors.email = \"Email is required.\";\n            isValid = false;\n          } else if (!/^[\\w.%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$/.test(inputs.email)) {\n            newErrors.email = \"Enter a valid email address.\";\n            isValid = false;\n          }\n          if (!inputs.password.trim()) {\n            newErrors.password = \"Password is required.\";\n            isValid = false;\n          } else if (inputs.password.length < 6) {\n            newErrors.password = \"Password must be at least 6 characters.\";\n            isValid = false;\n          }\n          if (!inputs.message.trim()) {\n            newErrors.message = \"Message is required.\";\n            isValid = false;\n          }\n\n          setErrors(newErrors);\n          return isValid;\n    };\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if (validate()) {\n          console.log(\"Form submitted:\", inputs);\n          // Reset form fields\n          setInputs({\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            message: \"\"\n          });\n        }\n      };\n    \n    return(\n        <>\n        <Container>\n        <Box\n         display=\"flex\"\n         flexDirection={\"column\"}\n         alignItems=\"center\"\n         justifyContent={\"center\"}\n         maxWidth={600}\n         margin=\"auto\"\n         marginTop={5}\n         padding={3}\n        borderRadius={5}\n        border={\"1px solid #eee\"}\n        >\n        <h2>Contact</h2>\n        <form onSubmit={handleSubmit}>\n            <TextField\n                name=\"name\"\n                value={inputs.name}\n                onChange={handleChange}\n                label=\"Name\"\n                type={\"text\"}\n                error={Boolean(errors.name)}\n                helperText={errors.name}\n                margin=\"dense\"\n                placeholder=\"Name\"\n                variant=\"outlined\"\n                fullWidth\n            /> \n            <TextField\n                name=\"email\"\n                value={inputs.email}\n                onChange={handleChange}\n                label=\"Email\"\n                type=\"email\"\n                error={Boolean(errors.email)}\n                helperText={errors.email}\n                margin=\"dense\"\n                placeholder=\"Email\"\n                variant=\"outlined\"\n                fullWidth\n            />  \n            <TextField\n                name=\"password\"\n                value={inputs.password}\n                onChange={handleChange}\n                label=\"Password\"\n                type=\"password\"\n                error={Boolean(errors.password)}\n                helperText={errors.password}\n                margin=\"dense\"\n                placeholder=\"Password\"\n                variant=\"outlined\"\n                fullWidth\n            /> \n            <TextField\n                name=\"message\"\n                value={inputs.message}\n                onChange={handleChange}\n                label=\"Multiline\"\n                multiline\n                error={Boolean(errors.message)}\n                helperText={errors.message}\n                rows={4}\n                margin=\"dense\"\n                placeholder=\"Message\"\n                fullWidth\n            /> \n            <div>\n                <Button variant=\"contained\" type=\"submit\" sx={{margin:3}}>Submit</Button>\n            </div>\n        </form>     \n        </Box>\n        </Container>\n        </>\n    );\n}\n\nexport default ContactForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}