{"ast":null,"code":"const fieldValidationRules = {\n  name: {\n    required: true\n  },\n  email: {\n    required: true,\n    regex: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  },\n  password: {\n    required: true,\n    minLength: 6\n  },\n  message: {\n    required: true,\n    minLength: 10\n  }\n};\nconst Validation = inputs => {\n  const errors = Object.keys(inputs).reduce((acc, key) => {\n    const value = inputs[key];\n    const rules = fieldValidationRules[key];\n    if (rules.required && !value.trim()) {\n      acc[key] = \"This field is required\";\n    } else if (rules.minLength && value.length < rules.minLength) {\n      acc[key] = `This field must be at least ${rules.minLength} characters long`;\n    } else if (rules.regex && !rules.regex.test(value)) {\n      acc[key] = \"Invalid format\";\n    } else if (rules.customValidation) {\n      const customError = rules.customValidation(value);\n      if (customError) {\n        acc[key] = customError;\n      }\n    }\n    return acc;\n  }, {});\n  rer;\n};\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["fieldValidationRules","name","required","email","regex","password","minLength","message","Validation","inputs","errors","Object","keys","reduce","acc","key","value","rules","trim","length","test","customValidation","customError","rer","_c","$RefreshReg$"],"sources":["/Users/anitamavani/workspace/React/my-ts-app/src/pages/Validation.tsx"],"sourcesContent":["type ValidationFunction<T> = (inputs: T) => Record<keyof T, string>;\n\ninterface ValidationRule {\n  required?: boolean;\n  minLength?: number;\n  regex?: RegExp;\n  customValidation?: (value: string) => string | undefined;\n}\n\nconst fieldValidationRules: Record<string, ValidationRule> = {\n  name: { required: true },\n  email: { required: true, regex: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/ },\n  password: { required: true, minLength: 6 },\n  message: { required: true, minLength: 10 },\n};\n\nconst Validation: ValidationFunction<{ [key: string]: string }> = (inputs) => {\n  const errors = Object.keys(inputs).reduce((acc, key) => {\n    const value = inputs[key];\n    const rules = fieldValidationRules[key];\n    if (rules.required && !value.trim()) {\n      acc[key] = \"This field is required\";\n    } else if (rules.minLength && value.length < rules.minLength) {\n      acc[key] = `This field must be at least ${rules.minLength} characters long`;\n    } else if (rules.regex && !rules.regex.test(value)) {\n      acc[key] = \"Invalid format\";\n    } else if (rules.customValidation) {\n      const customError = rules.customValidation(value);\n      if (customError) {\n        acc[key] = customError;\n      }\n    }\n    return acc;\n  }, {} as Record<string, string>);\n  rer\n};\n\nexport default Validation;\n"],"mappings":"AASA,MAAMA,oBAAoD,GAAG;EAC3DC,IAAI,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC;EACxBC,KAAK,EAAE;IAAED,QAAQ,EAAE,IAAI;IAAEE,KAAK,EAAE;EAA6B,CAAC;EAC9DC,QAAQ,EAAE;IAAEH,QAAQ,EAAE,IAAI;IAAEI,SAAS,EAAE;EAAE,CAAC;EAC1CC,OAAO,EAAE;IAAEL,QAAQ,EAAE,IAAI;IAAEI,SAAS,EAAE;EAAG;AAC3C,CAAC;AAED,MAAME,UAAyD,GAAIC,MAAM,IAAK;EAC5E,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IACtD,MAAMC,KAAK,GAAGP,MAAM,CAACM,GAAG,CAAC;IACzB,MAAME,KAAK,GAAGjB,oBAAoB,CAACe,GAAG,CAAC;IACvC,IAAIE,KAAK,CAACf,QAAQ,IAAI,CAACc,KAAK,CAACE,IAAI,CAAC,CAAC,EAAE;MACnCJ,GAAG,CAACC,GAAG,CAAC,GAAG,wBAAwB;IACrC,CAAC,MAAM,IAAIE,KAAK,CAACX,SAAS,IAAIU,KAAK,CAACG,MAAM,GAAGF,KAAK,CAACX,SAAS,EAAE;MAC5DQ,GAAG,CAACC,GAAG,CAAC,GAAG,+BAA+BE,KAAK,CAACX,SAAS,kBAAkB;IAC7E,CAAC,MAAM,IAAIW,KAAK,CAACb,KAAK,IAAI,CAACa,KAAK,CAACb,KAAK,CAACgB,IAAI,CAACJ,KAAK,CAAC,EAAE;MAClDF,GAAG,CAACC,GAAG,CAAC,GAAG,gBAAgB;IAC7B,CAAC,MAAM,IAAIE,KAAK,CAACI,gBAAgB,EAAE;MACjC,MAAMC,WAAW,GAAGL,KAAK,CAACI,gBAAgB,CAACL,KAAK,CAAC;MACjD,IAAIM,WAAW,EAAE;QACfR,GAAG,CAACC,GAAG,CAAC,GAAGO,WAAW;MACxB;IACF;IACA,OAAOR,GAAG;EACZ,CAAC,EAAE,CAAC,CAA2B,CAAC;EAChCS,GAAG;AACL,CAAC;AAACC,EAAA,GAnBIhB,UAAyD;AAqB/D,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}