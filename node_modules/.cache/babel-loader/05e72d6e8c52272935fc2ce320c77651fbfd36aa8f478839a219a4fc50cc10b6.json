{"ast":null,"code":"var _jsxFileName = \"/Users/anitamavani/workspace/React/my-ts-app/src/pages/ContactForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, TextField, Container, CssBaseline } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const [inputs, setInputs] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    setInputs(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        maxWidth: 400,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: \"auto\",\n        marginTop: 5,\n        padding: 3,\n        borderRadius: 5,\n        boxShadow: \"5px 5px 10px #000000\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          value: inputs.name,\n          onChange: handleChange,\n          type: \"text\",\n          sx: {\n            margin: 3\n          },\n          placeholder: \"Name\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          value: inputs.email,\n          onChange: handleChange,\n          type: \"email\",\n          sx: {\n            margin: 3\n          },\n          placeholder: \"Email\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"password\",\n          value: inputs.password,\n          onChange: handleChange,\n          type: \"passward\",\n          sx: {\n            margin: 3\n          },\n          placeholder: \"Password\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ContactForm, \"Ec/sPhDud5KIVNVTL5OjOMg4oww=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","Box","TextField","Container","CssBaseline","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactForm","_s","inputs","setInputs","name","email","password","handleChange","e","prevState","target","value","children","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","alignItems","justifyContent","margin","marginTop","padding","borderRadius","boxShadow","onChange","type","sx","placeholder","variant","_c","$RefreshReg$"],"sources":["/Users/anitamavani/workspace/React/my-ts-app/src/pages/ContactForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, FormControl, InputLabel, Input, FormHelperText, TextField, Container, CssBaseline } from '@mui/material';\nimport { setIn } from \"formik\";\n\nconst ContactForm = () => {\n    const [inputs, setInputs] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\"\n    });\n    const handleChange = (e:any) => {\n        setInputs((prevState) => ({ \n            ...prevState, \n            [e.target.name]: e.target.value \n        }))\n    };\n    return(\n        <>\n        <Container maxWidth=\"sm\">\n        <CssBaseline />  \n        <Box\n         display=\"flex\"\n         flexDirection={\"column\"}\n         maxWidth={400}\n         alignItems=\"center\"\n         justifyContent={\"center\"}\n         margin=\"auto\"\n         marginTop={5}\n         padding={3}\n        borderRadius={5}\n        boxShadow={\"5px 5px 10px #000000\"}\n        >\n        <h2>Contact</h2>\n        <form></form>\n            <TextField\n                name=\"name\"\n                value={inputs.name}\n                onChange={handleChange}\n                type={\"text\"}\n                sx={{margin:3}}\n                placeholder=\"Name\"\n                variant=\"outlined\"\n            /> \n            <TextField\n                name=\"email\"\n                value={inputs.email}\n                onChange={handleChange}\n                type={\"email\"}\n                sx={{margin:3}}\n                placeholder=\"Email\"\n                variant=\"outlined\"\n            />  \n            <TextField\n                name=\"password\"\n                value={inputs.password}\n                onChange={handleChange}\n                type={\"passward\"}\n                sx={{margin:3}}\n                placeholder=\"Password\"\n                variant=\"outlined\"\n            />       \n        </Box>\n        \n        </Container>\n        </>\n    );\n}\n\nexport default ContactForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}